import typia from "../../../../src";

export function test_issue_438_primitve_object_type(): void {
    type X = object;
    type Y = X;
    type Z = Y;
    type Type = {};
    interface Interface {}
    class Class {}
    const meta = {
        metadatas: [
            {
                any: false,
                required: true,
                optional: false,
                nullable: false,
                functional: false,
                atomics: [],
                constants: [],
                templates: [],
                resolved: null,
                rest: null,
                arrays: [],
                tuples: [],
                objects: ["object"],
                natives: [],
                sets: [],
                maps: [],
            },
            {
                any: false,
                required: true,
                optional: false,
                nullable: false,
                functional: false,
                atomics: [],
                constants: [],
                templates: [],
                resolved: null,
                rest: null,
                arrays: [],
                tuples: [],
                objects: ["object"],
                natives: [],
                sets: [],
                maps: [],
            },
            {
                any: false,
                required: true,
                optional: false,
                nullable: false,
                functional: false,
                atomics: [],
                constants: [],
                templates: [],
                resolved: null,
                rest: null,
                arrays: [],
                tuples: [],
                objects: ["object"],
                natives: [],
                sets: [],
                maps: [],
            },
            {
                any: false,
                required: true,
                optional: false,
                nullable: false,
                functional: false,
                atomics: [],
                constants: [],
                templates: [],
                resolved: null,
                rest: null,
                arrays: [],
                tuples: [],
                objects: ["Type"],
                natives: [],
                sets: [],
                maps: [],
            },
            {
                any: false,
                required: true,
                optional: false,
                nullable: false,
                functional: false,
                atomics: [],
                constants: [],
                templates: [],
                resolved: null,
                rest: null,
                arrays: [],
                tuples: [],
                objects: ["Interface"],
                natives: [],
                sets: [],
                maps: [],
            },
            {
                any: false,
                required: true,
                optional: false,
                nullable: false,
                functional: false,
                atomics: [],
                constants: [],
                templates: [],
                resolved: null,
                rest: null,
                arrays: [],
                tuples: [],
                objects: ["Class"],
                natives: [],
                sets: [],
                maps: [],
            },
        ],
        collection: [
            {
                name: "object",
                properties: [],
                jsDocTags: [],
                index: 0,
                validated: false,
                recursive: false,
                nullables: [false],
            },
            {
                name: "Type",
                properties: [],
                jsDocTags: [],
                index: 1,
                validated: false,
                recursive: false,
                nullables: [false],
            },
            {
                name: "Interface",
                properties: [],
                jsDocTags: [],
                index: 2,
                validated: false,
                recursive: false,
                nullables: [false],
            },
            {
                name: "Class",
                properties: [],
                jsDocTags: [],
                index: 3,
                validated: false,
                recursive: false,
                nullables: [false],
            },
        ],
    };
    if (
        meta.collection.length !== 4 ||
        meta.collection.some((o) => o.properties.length !== 0)
    )
        throw new Error(
            "Bug on issue #438: failed to understand primitive object type",
        );
}
